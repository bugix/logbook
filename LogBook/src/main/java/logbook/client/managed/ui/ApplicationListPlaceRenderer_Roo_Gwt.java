// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package logbook.client.managed.ui;

import com.google.gwt.text.shared.AbstractRenderer;
import logbook.client.managed.proxy.ClassificationTopicProxy;
import logbook.client.managed.proxy.KeywordProxy;
import logbook.client.managed.proxy.MainClassificationProxy;
import logbook.client.managed.proxy.SkilAcquiredProxy;
import logbook.client.managed.proxy.SkillAcquiredProxy;
import logbook.client.managed.proxy.SkillLevelProxy;
import logbook.client.managed.proxy.SkillProxy;
import logbook.client.managed.proxy.StudentProxy;
import logbook.client.managed.proxy.TopicProxy;
import logbook.client.managed.request.ApplicationEntityTypesProcessor;
import logbook.client.scaffold.place.ProxyListPlace;

public abstract class ApplicationListPlaceRenderer_Roo_Gwt extends AbstractRenderer<ProxyListPlace> {

    public String render(ProxyListPlace object) {
        return new ApplicationEntityTypesProcessor<String>() {

            @Override
            public void handleClassificationTopic(ClassificationTopicProxy isNull) {
                setResult("ClassificationTopics");
            }

            @Override
            public void handleKeyword(KeywordProxy isNull) {
                setResult("Keywords");
            }

            @Override
            public void handleMainClassification(MainClassificationProxy isNull) {
                setResult("MainClassifications");
            }

            @Override
            public void handleSkilAcquired(SkilAcquiredProxy isNull) {
                setResult("SkilAcquireds");
            }

            @Override
            public void handleSkillAcquired(SkillAcquiredProxy isNull) {
                setResult("SkillAcquireds");
            }

            @Override
            public void handleSkillLevel(SkillLevelProxy isNull) {
                setResult("SkillLevels");
            }

            @Override
            public void handleSkill(SkillProxy isNull) {
                setResult("Skills");
            }

            @Override
            public void handleStudent(StudentProxy isNull) {
                setResult("Students");
            }

            @Override
            public void handleTopic(TopicProxy isNull) {
                setResult("Topics");
            }
        }.process(object.getProxyClass());
    }
}
