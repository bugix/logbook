// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package logbook.client.managed.activity;

import com.google.gwt.activity.shared.Activity;
import com.google.gwt.place.shared.PlaceController;
import com.google.web.bindery.requestfactory.shared.EntityProxyId;
import com.google.web.bindery.requestfactory.shared.RequestContext;
import java.util.Set;
import logbook.client.managed.proxy.KeywordProxy;
import logbook.client.managed.proxy.SkillProxy;
import logbook.client.managed.request.ApplicationRequestFactory;
import logbook.client.managed.request.KeywordRequest;
import logbook.client.managed.ui.KeywordDetailsView;
import logbook.client.managed.ui.KeywordEditView;
import logbook.client.managed.ui.KeywordListView;
import logbook.client.managed.ui.KeywordMobileDetailsView;
import logbook.client.managed.ui.KeywordMobileEditView;
import logbook.client.managed.ui.SkillSetEditor;
import logbook.client.scaffold.ScaffoldApp;
import logbook.client.scaffold.place.CreateAndEditProxy;
import logbook.client.scaffold.place.FindAndEditProxy;
import logbook.client.scaffold.place.ProxyPlace;

public abstract class KeywordActivitiesMapper_Roo_Gwt {

    protected ApplicationRequestFactory requests;

    protected PlaceController placeController;

    protected Activity makeCreateActivity() {
        KeywordEditView.instance().setCreating(true);
        final KeywordRequest request = requests.keywordRequest();
        Activity activity = new CreateAndEditProxy<KeywordProxy>(KeywordProxy.class, request, ScaffoldApp.isMobile() ? KeywordMobileEditView.instance() : KeywordEditView.instance(), placeController) {

            @Override
            protected RequestContext createSaveRequest(KeywordProxy proxy) {
                request.persist().using(proxy);
                return request;
            }
        };
        return new KeywordEditActivityWrapper(requests, ScaffoldApp.isMobile() ? KeywordMobileEditView.instance() : KeywordEditView.instance(), activity, null);
    }

    @SuppressWarnings("unchecked")
    protected EntityProxyId<logbook.client.managed.proxy.KeywordProxy> coerceId(ProxyPlace place) {
        return (EntityProxyId<KeywordProxy>) place.getProxyId();
    }

    protected Activity makeEditActivity(ProxyPlace place) {
        KeywordEditView.instance().setCreating(false);
        EntityProxyId<KeywordProxy> proxyId = coerceId(place);
        Activity activity = new FindAndEditProxy<KeywordProxy>(proxyId, requests, ScaffoldApp.isMobile() ? KeywordMobileEditView.instance() : KeywordEditView.instance(), placeController) {

            @Override
            protected RequestContext createSaveRequest(KeywordProxy proxy) {
                KeywordRequest request = requests.keywordRequest();
                request.persist().using(proxy);
                return request;
            }
        };
        return new KeywordEditActivityWrapper(requests, ScaffoldApp.isMobile() ? KeywordMobileEditView.instance() : KeywordEditView.instance(), activity, proxyId);
    }
}
