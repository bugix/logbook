// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package logbook.client.managed.activity;

import com.google.gwt.activity.shared.Activity;
import com.google.gwt.event.shared.EventBus;
import com.google.gwt.place.shared.Place;
import com.google.gwt.user.client.ui.AcceptsOneWidget;
import com.google.web.bindery.requestfactory.shared.EntityProxyId;
import com.google.web.bindery.requestfactory.shared.Receiver;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import logbook.client.managed.activity.SkillAcquiredEditActivityWrapper.View;
import logbook.client.managed.proxy.SkillAcquiredProxy;
import logbook.client.managed.proxy.SkillLevelProxy;
import logbook.client.managed.proxy.SkillProxy;
import logbook.client.managed.proxy.StudentProxy;
import logbook.client.managed.request.ApplicationRequestFactory;
import logbook.client.scaffold.activity.IsScaffoldMobileActivity;
import logbook.client.scaffold.place.ProxyEditView;
import logbook.client.scaffold.place.ProxyListPlace;
import logbook.client.scaffold.place.ProxyPlace;

public abstract class SkillAcquiredEditActivityWrapper_Roo_Gwt implements Activity, IsScaffoldMobileActivity {

    protected Activity wrapped;

    protected View<?> view;

    protected ApplicationRequestFactory requests;

    @Override
    public void start(AcceptsOneWidget display, EventBus eventBus) {
        view.setSkillPickerValues(Collections.<SkillProxy>emptyList());
        requests.skillRequest().findSkillEntries(0, 50).with(logbook.client.managed.ui.SkillProxyRenderer.instance().getPaths()).fire(new Receiver<List<SkillProxy>>() {

            public void onSuccess(List<SkillProxy> response) {
                List<SkillProxy> values = new ArrayList<SkillProxy>();
                values.add(null);
                values.addAll(response);
                view.setSkillPickerValues(values);
            }
        });
        view.setStudentPickerValues(Collections.<StudentProxy>emptyList());
        requests.studentRequest().findStudentEntries(0, 50).with(logbook.client.managed.ui.StudentProxyRenderer.instance().getPaths()).fire(new Receiver<List<StudentProxy>>() {

            public void onSuccess(List<StudentProxy> response) {
                List<StudentProxy> values = new ArrayList<StudentProxy>();
                values.add(null);
                values.addAll(response);
                view.setStudentPickerValues(values);
            }
        });
        view.setSkillLevelPickerValues(Collections.<SkillLevelProxy>emptyList());
        requests.skillLevelRequest().findSkillLevelEntries(0, 50).with(logbook.client.managed.ui.SkillLevelProxyRenderer.instance().getPaths()).fire(new Receiver<List<SkillLevelProxy>>() {

            public void onSuccess(List<SkillLevelProxy> response) {
                List<SkillLevelProxy> values = new ArrayList<SkillLevelProxy>();
                values.add(null);
                values.addAll(response);
                view.setSkillLevelPickerValues(values);
            }
        });
        wrapped.start(display, eventBus);
    }
}
