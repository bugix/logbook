// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package logbook.client.managed.activity;

import com.google.gwt.activity.shared.Activity;
import com.google.gwt.place.shared.PlaceController;
import com.google.web.bindery.requestfactory.shared.EntityProxyId;
import com.google.web.bindery.requestfactory.shared.RequestContext;
import logbook.client.managed.proxy.AdministratorProxy;
import logbook.client.managed.request.AdministratorRequest;
import logbook.client.managed.request.ApplicationRequestFactory;
import logbook.client.managed.ui.AdministratorDetailsView;
import logbook.client.managed.ui.AdministratorEditView;
import logbook.client.managed.ui.AdministratorListView;
import logbook.client.managed.ui.AdministratorMobileDetailsView;
import logbook.client.managed.ui.AdministratorMobileEditView;
import logbook.client.scaffold.ScaffoldApp;
import logbook.client.scaffold.place.CreateAndEditProxy;
import logbook.client.scaffold.place.FindAndEditProxy;
import logbook.client.scaffold.place.ProxyPlace;

public abstract class AdministratorActivitiesMapper_Roo_Gwt {

    protected ApplicationRequestFactory requests;

    protected PlaceController placeController;

    protected Activity makeCreateActivity() {
        AdministratorEditView.instance().setCreating(true);
        final AdministratorRequest request = requests.administratorRequest();
        Activity activity = new CreateAndEditProxy<AdministratorProxy>(AdministratorProxy.class, request, ScaffoldApp.isMobile() ? AdministratorMobileEditView.instance() : AdministratorEditView.instance(), placeController) {

            @Override
            protected RequestContext createSaveRequest(AdministratorProxy proxy) {
                request.persist().using(proxy);
                return request;
            }
        };
        return new AdministratorEditActivityWrapper(requests, ScaffoldApp.isMobile() ? AdministratorMobileEditView.instance() : AdministratorEditView.instance(), activity, null);
    }

    @SuppressWarnings("unchecked")
    protected EntityProxyId<logbook.client.managed.proxy.AdministratorProxy> coerceId(ProxyPlace place) {
        return (EntityProxyId<AdministratorProxy>) place.getProxyId();
    }

    protected Activity makeEditActivity(ProxyPlace place) {
        AdministratorEditView.instance().setCreating(false);
        EntityProxyId<AdministratorProxy> proxyId = coerceId(place);
        Activity activity = new FindAndEditProxy<AdministratorProxy>(proxyId, requests, ScaffoldApp.isMobile() ? AdministratorMobileEditView.instance() : AdministratorEditView.instance(), placeController) {

            @Override
            protected RequestContext createSaveRequest(AdministratorProxy proxy) {
                AdministratorRequest request = requests.administratorRequest();
                request.persist().using(proxy);
                return request;
            }
        };
        return new AdministratorEditActivityWrapper(requests, ScaffoldApp.isMobile() ? AdministratorMobileEditView.instance() : AdministratorEditView.instance(), activity, proxyId);
    }
}
